openapi: 3.0.0
info:
  title: Fozzolog API
  description: Simple blogging API
  version: 0.0.1

servers:
  - url: '{protocol}://{environment}.fozzilinymoo.org/v1'
    description: Main (production) server

    variables:
      protocol:
        enum:
          - http
          - https
        default: https
      environment:
        enum:
          - api     # Production
          - api.dev # Development
        default: api

paths:
  /login:
    post:
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Authenticated
          content:
            application/json:
              schema:
                properties:
                  X-API-Key: 
                    type: string
        '401':
          description: Incorrect username or password

  /flogs/:
    get:
      summary: Get all flog objects
      security: []
      responses: 
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfFlog'
        '404':
          description: Not found

    post:
      security: 
        - ApiKeyAuth: []
      summary: Add a new flog object
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flog'
      responses:
        '201':
          description: Created
        '401':
          description: Invalid API key provided

  /flogs/{id}:
    get:
      tags:
        - Flogs
      summary: Gets a flog by ID.
      security: []
      operationId: get_flog_by_id
      parameters:
        - name: id
          in: path
          description: Flog ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flog'
        '404':
          description: Object not found
    put:
      summary: Update a flog object
      security: 
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          description: Flog ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flog'
      responses:
        '200':
          description: Updated
        '401':
          description: Invalid API key provided
        '404':
          description: Object not found
    delete:
      summary: Delete a flog object
      security: 
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          description: Flog ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: The resource was deleted successfully
        '401':
          description: Invalid API key provided
        '404':
          description: Object not found

  /authors/:
    get:
      summary: Get all author objects
      security: 
        - ApiKeyAuth: []
      responses: 
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfAuthor'
        '401':
          description: Invalid API key provided
        '404':
          description: Object not found
    post:
      summary: Add a new author object
      security: 
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '201':
          description: Created
        '401':
          description: Invalid API key provided

  /authors/{id}:
    get:
      tags:
        - Author
      summary: Gets an author by ID.
      operationId: get_author_by_id
      parameters:
        - name: id
          in: path
          description: Author ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
        '404':
          description: Object not found
    put:
      summary: Update an author object
      security: 
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          description: Author ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '200':
          description: Updated
        '401':
          description: Invalid API key provided
        '404':
          description: Object not found
    delete:
      summary: Delete an author object
      security: 
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          description: Author ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: The resource was deleted successfully
        '401':
          description: Invalid API key provided
        '404':
          description: Object not found

  /authors/{id}/posts/:
    get:
      summary: Get all post objects for an author
      parameters:
        - name: id
          in: path
          description: Author ID
          required: true
          schema:
            type: integer
            format: int64
      responses: 
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfPost'
        '404':
          description: Object not found

  /flogs/{id}/posts/:
    get:
      summary: Get all post objects for a flog
      parameters:
        - name: id
          in: path
          description: Flog ID
          required: true
          schema:
            type: integer
            format: int64
      responses: 
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfPost'
        '404':
          description: Object not found

  /posts/:
    post:
      summary: Add a new post object
      security: 
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '201':
          description: Created
        '401':
          description: Invalid API key provided

  /posts/{id}:
    get:
      tags:
        - Post
      summary: Gets an post by ID.
      operationId: get_post_by_id
      parameters:
        - name: id
          in: path
          description: Post ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '404':
          description: Object not found
    put:
      summary: Update a post object
      security: 
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          description: Post ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          description: Updated
        '401':
          description: Invalid API key provided
        '404':
          description: Object not found
    delete:
      summary: Delete a post object
      security: 
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          description: Post ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: The resource was deleted successfully
        '401':
          description: Invalid API key provided
        '404':
          description: Object not found

components:
  schemas:
    Flog:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      required:
        - id
        - name
    ArrayOfFlog:
      type: array
      items:
        $ref: '#/components/schemas/Flog'
    Author:
      type: object
      properties:
        id:
          type: integer
          format: int64
        flog_id:
          type: integer
          format: int64
        name:
          type: string
        username:
          type: string
        password:
          type: string
        is_admin:
          type: boolean
        is_flog_admin:
          type: boolean
      required:
        - id
        - username
        - password
        - is_admin
        - is_flog_admin
    ArrayOfAuthor:
      type: array
      items:
        $ref: '#/components/schemas/Author'
    Post:
      type: object
      properties:
        id:
          type: integer
          format: int64
        author_id:
          type: integer
          format: int64
        title:
          type: string
        body:
          type: string
      required:
        - id
        - author_id
        - title
        - body
    ArrayOfPost:
      type: array
      items:
        $ref: '#/components/schemas/Post'

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

